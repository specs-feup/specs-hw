################################################################################
# Automatically-generated file. Do not edit!
################################################################################

RM := rm -rf

ifneq ($(MAKECMDGOALS),clean)
ifneq ($(strip $(S_UPPER_DEPS)),)
-include $(S_UPPER_DEPS)
endif
ifneq ($(strip $(C_DEPS)),)
-include $(C_DEPS)
endif
endif

CC := aarch64-xilinx-elf-

LIBS := -Wl,--start-group,-lxil,-lgcc,-lc,-lm,--end-group
LIBDIR := $(ROOT)/lib/standalone_bsp_0/psu_cortexa53_0
EXTRAFLAGS := -fstack-check -Werror -Wstack-usage=128000 -Wno-error=unused-function -Wno-error=unknown-pragmas -Wno-error=misleading-indentation -Wno-error=unused-variable -Wno-error=implicit-function-declaration

OBJDIR=$(ROOT)/build/$(KERNEL)

###############################################################################
# Add inputs and outputs from these tool invocations to the build variables 
LD_SRCS = $(ROOT)/lib/lscript.ld 
C_SRCS = ./$(KERNEL).c 
OBJS = $(OBJDIR)/$(KERNEL).o 
C_DEPS = $(OBJDIR)/$(KERNEL).d

# Each subdirectory must supply rules for building sources it contributes
$(OBJDIR)/%.o : %.c
	@echo 'Building file: $<'
	@echo 'Invoking: ARM v8 gcc compiler'
	$(CC)gcc $(KERNEL_OPTIONS) -Wall -O2 -I$(RELATIVE)/lib -c -fmessage-length=0 -MT"$@" $(EXTRAFLAGS) -I$(LIBDIR)/include -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -o "$@" "$<"
	@echo 'Finished building: $<'
	@echo ' '

###############################################################################
# Add inputs and outputs from these tool invocations to the build variables 
ELFSIZE = $(KERNEL).elf.size

# All Target
all: $(OBJDIR)/$(KERNEL).elf 

#$(OBJDIR)/$(KERNEL).elf.size

$(OBJDIR):
	mkdir -p $(OBJDIR)

# Tool invocations
$(OBJDIR)/$(KERNEL).elf: $(OBJDIR) $(OBJS) $(LD_SRCS)
	@echo 'Building target: $@'
	@echo 'Invoking: ARM v8 gcc linker'
	$(CC)gcc -Wl,-T -Wl,$(LD_SRCS) -L$(LIBDIR)/lib $(EXTRAFLAGS) -o "$(OBJDIR)/$(KERNEL).elf" $(OBJS) $(LIBS)
	rm $(OBJS) $(C_DEPS)
	@echo 'Finished building target: $@'
	@echo ' '

$(OBJDIR)/$(KERNEL).elf.size: $(OBJDIR)/$(KERNEL).elf
	@echo 'Invoking: ARM v8 Print Size'
	$(CC)size $(OBJDIR)/$(KERNEL).elf  |tee "$(OBJDIR)/$(KERNEL).elf.size"
	@echo 'Finished building: $@'
	@echo ' '

# Other Targets
clean:
	-$(RM) $(OBJS) $(OBJDIR)/$(C_DEPS) $(OBJDIR)/$(KERNEL).elf $(OBJDIR)/$(KERNEL).elf.size $(OBJDIR)
	-@echo ' '

# print rule
print-%: ; @echo $*=$($*)

.PHONY: all clean dependents
.SECONDARY:

