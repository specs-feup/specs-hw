######################################################################################
# Master make based on the file automatically-generated by Vitis Application Project #
######################################################################################

RM := rm -rf

ifneq ($(MAKECMDGOALS),clean)
ifneq ($(strip $(S_UPPER_DEPS)),)
-include $(S_UPPER_DEPS)
endif
ifneq ($(strip $(C_DEPS)),)
-include $(C_DEPS)
endif
endif

CC := mb-gcc

LIBS := -Wl,--start-group,-lxil,-lgcc,-lc,--end-group
LIBDIR := $(ROOT)/lib/standalone_microblaze_0/bsp/microblaze_0
CFLAGS := -mlittle-endian -mxl-barrel-shift -mxl-pattern-compare -mno-xl-soft-div -mcpu=v11.0 -mno-xl-soft-mul -mhard-float -mxl-float-convert -mxl-float-sqrt
EXTRAFLAGS := -fstack-check -Werror -Wstack-usage=128000 -Wno-error=unused-function -Wno-error=unknown-pragmas

LIVERMORE:=$(ROOT)/../livermoreKernels/common
SOURCEDIRS:=$(LIVERMORE)
OBJDIR=$(ROOT)/build/$(KERNEL)

###############################################################################
# Add inputs and outputs from these tool invocations to the build variables 
LD_SRCS = $(ROOT)/lib/lscript.ld 

# Create a list of *.c sources in DIRS
SOURCES = $(foreach dir,$(SOURCEDIRS),$(wildcard $(dir)/*.c)) $(REFERENCE)
C_SRCS = $(notdir $(SOURCES))

# Define objects for all sources
OBJS = $(addprefix $(OBJDIR)/, $(C_SRCS:%.c=%.o))

C_DEPS = $(addprefix $(OBJDIR)/, $(C_SRCS:%.c=%.d))

# Add this list to VPATH, the place make will look for the source files
VPATH = $(SOURCEDIRS) $(dir $(REFERENCE))

# Each subdirectory must supply rules for building sources it contributes
$(OBJDIR)/%.o : %.c $(OBJDIR)
	@echo 'Building file: $<'
	@echo 'Invoking: MicroBlaze gcc compiler'
	$(CC) $(KERNEL_OPTIONS) -Wall -O2 -g3 -I$(LIVERMORE) -c -fmessage-length=0 -MT"$@" -I$(LIBDIR)/include $(CFLAGS) $(EXTRAFLAGS) -Wl,--no-relax -ffunction-sections -fdata-sections -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -o "$@" "$<"
	@echo 'Finished building: $<'
	@echo ' '

###############################################################################
# Add inputs and outputs from these tool invocations to the build variables 
ELFSIZE = $(OBJDIR)/$(KERNEL).elf.size

# All Target
all: $(OBJDIR)/$(KERNEL).elf $(OBJDIR)/$(KERNEL).elf.size

$(OBJDIR):
	mkdir -p $(OBJDIR)

# Tool invocations
$(OBJDIR)/$(KERNEL).elf: $(OBJDIR) $(OBJS) $(LD_SRCS)
	@echo 'Building target: $@'
	@echo 'Invoking: MicroBlaze gcc linker'
	$(CC) -Wl,-T -Wl,$(LD_SRCS) -L$(LIBDIR)/lib $(CFLAGS) $(EXTRAFLAGS) -Wl,--no-relax -Wl,--gc-sections -o "$(OBJDIR)/$(KERNEL).elf" $(OBJS) $(LIBS)
	rm $(OBJS) $(C_DEPS)	
	@echo 'Finished building target: $@'
	@echo ' '

$(OBJDIR)/$(KERNEL).elf.size: $(OBJDIR)/$(KERNEL).elf
	@echo 'Invoking: MicroBlaze Print Size'
	mb-size $(OBJDIR)/$(KERNEL).elf  |tee "$(OBJDIR)/$(KERNEL).elf.size"
	@echo 'Finished building: $@'
	@echo ' '

# Other Targets
clean:
	-$(RM) $(OBJS) $(OBJDIR)/$(C_DEPS) $(OBJDIR)/$(KERNEL).elf $(OBJDIR)/$(KERNEL).elf.size $(OBJDIR)
	-@echo ' '

# print rule
print-%: ; @echo $*=$($*)

.PHONY: all clean dependents
.SECONDARY:

