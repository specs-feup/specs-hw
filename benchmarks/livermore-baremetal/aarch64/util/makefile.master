################################################################################
# Automatically-generated file. Do not edit!
################################################################################

RM := rm -rf

ifneq ($(MAKECMDGOALS),clean)
ifneq ($(strip $(S_UPPER_DEPS)),)
-include $(S_UPPER_DEPS)
endif
ifneq ($(strip $(C_DEPS)),)
-include $(C_DEPS)
endif
endif

CC := aarch64-xilinx-elf-gcc

LIBS := -Wl,--start-group,-lxil,-lgcc,-lc,-lm,--end-group
LIBDIR := $(ROOT)/lib/standalone_bsp_0/psu_cortexa53_0
EXTRAFLAGS := -fstack-check -Werror -Wstack-usage=128000 -Wno-error=unused-function -Wno-error=unknown-pragmas -Wno-error=misleading-indentation -Wno-error=unused-variable

LIVERMORE:=$(ROOT)/../livermoreKernels/common
SOURCEDIRS:=$(LIVERMORE)

###############################################################################
# Add inputs and outputs from these tool invocations to the build variables 
LD_SRCS += \
$(ROOT)/lib/lscript.ld 

# Create a list of *.c sources in DIRS
SOURCES = $(foreach dir,$(SOURCEDIRS),$(wildcard $(dir)/*.c)) $(REFERENCE)
C_SRCS = $(notdir $(SOURCES))

# Define objects for all sources
OBJS += \
$(C_SRCS:%.c=%.o)

C_DEPS += \
$(C_SRCS:%.c=%.d)

# Add this list to VPATH, the place make will look for the source files
VPATH = $(SOURCEDIRS) $(dir $(REFERENCE))

# Each subdirectory must supply rules for building sources it contributes
./%.o: ./%.c
	@echo 'Building file: $<'
	@echo 'Invoking: ARM v8 gcc compiler'
	$(CC) $(KERNEL_OPTIONS) -Wall -O2 -I$(LIVERMORE) -c -fmessage-length=0 -MT"$@" $(EXTRAFLAGS) -I$(LIBDIR)/include -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -o "$@" "$<"
	@echo 'Finished building: $<'
	@echo ' '

###############################################################################
# Add inputs and outputs from these tool invocations to the build variables 
ELFSIZE += \
$(KERNEL).elf.size \

# All Target
all: $(KERNEL).elf secondary-outputs $(ROOT)/build/$(KERNEL).elf

$(ROOT)/build/$(KERNEL).elf: $(KERNEL).elf
	mkdir -p $(ROOT)/build/
	cp $(KERNEL).elf $(ROOT)/build/$(KERNEL).elf

# Tool invocations
$(KERNEL).elf: $(OBJS) $(LD_SRCS) $(USER_OBJS)
	@echo 'Building target: $@'
	@echo 'Invoking: ARM v8 gcc linker'
	$(CC) -Wl,-T -Wl,$(LD_SRCS) -L$(LIBDIR)/lib $(EXTRAFLAGS) -o "$(KERNEL).elf" $(OBJS) $(USER_OBJS) $(LIBS)
	@echo 'Finished building target: $@'
	@echo ' '

$(KERNEL).elf.size: $(KERNEL).elf
	@echo 'Invoking: ARM v8 Print Size'
	aarch64-xilinx-elf-size $(KERNEL).elf  |tee "$(KERNEL).elf.size"
	@echo 'Finished building: $@'
	@echo ' '

# Other Targets
clean:
	-$(RM) $(EXECUTABLES) $(OBJS) $(S_UPPER_DEPS) $(C_DEPS) $(ELFSIZE) $(KERNEL).elf $(KERNEL).elf.size 
	-@echo ' '

secondary-outputs: $(ELFSIZE)

# print rule
print-%: ; @echo $*=$($*)

.PHONY: all clean dependents
.SECONDARY:

