// TODO List

// 1. define grammar file
	// 1.1. define some type of construct to allow for DPR calls? (!)
	// 1.2. allow specification of reading parameters from file

// 2. reutilize HardwareNode classes from BinaryTranslation
// 3. research source-to-source generation of verilog

// diferentiate getter by reference and by value (?)
	// how to specify drive  with multiple calls?
	// how to specify temporal moment of drive on variable or call return?

--------------------------------

Example of what we might want:

test.crisp:

package <package name>;

imports...

public module modname {

	data32 varA;
	data32 varB;

	begin
		// structure??	
	end
	
	
}
